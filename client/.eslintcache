[{"/home/daein/HTML/youtube/client/src/index.js":"1","/home/daein/HTML/youtube/client/src/reportWebVitals.js":"2","/home/daein/HTML/youtube/client/src/components/App.js":"3","/home/daein/HTML/youtube/client/src/_reducers/index.js":"4","/home/daein/HTML/youtube/client/src/hoc/auth.js":"5","/home/daein/HTML/youtube/client/src/components/views/NavBar/NavBar.js":"6","/home/daein/HTML/youtube/client/src/components/views/Footer/Footer.js":"7","/home/daein/HTML/youtube/client/src/components/views/LoginPage/LoginPage.js":"8","/home/daein/HTML/youtube/client/src/components/views/RegisterPage/RegisterPage.js":"9","/home/daein/HTML/youtube/client/src/components/views/LandingPage/LandingPage.js":"10","/home/daein/HTML/youtube/client/src/components/views/VideoUploadPage/VideoUploadPage.js":"11","/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/VideoDetailPage.js":"12","/home/daein/HTML/youtube/client/src/_reducers/user_reducer.js":"13","/home/daein/HTML/youtube/client/src/components/views/NavBar/Sections/RightMenu.js":"14","/home/daein/HTML/youtube/client/src/_actions/user_action.js":"15","/home/daein/HTML/youtube/client/src/components/views/NavBar/Sections/LeftMenu.js":"16","/home/daein/HTML/youtube/client/src/_actions/types.js":"17","/home/daein/HTML/youtube/client/src/components/Config.js":"18","/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/Sections/SideVideo.js":"19","/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/Sections/Subscribe.js":"20","/home/daein/HTML/youtube/client/src/components/views/SubscriptioPage/SubscriptionPage.js":"21"},{"size":1072,"mtime":1620280384571,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1620269032642,"results":"24","hashOfConfig":"23"},{"size":1325,"mtime":1620887778833,"results":"25","hashOfConfig":"23"},{"size":152,"mtime":1620269032634,"results":"26","hashOfConfig":"23"},{"size":895,"mtime":1620868371837,"results":"27","hashOfConfig":"23"},{"size":1444,"mtime":1620613833507,"results":"28","hashOfConfig":"23"},{"size":320,"mtime":1620711214171,"results":"29","hashOfConfig":"23"},{"size":1311,"mtime":1620605981703,"results":"30","hashOfConfig":"23"},{"size":1971,"mtime":1620886747640,"results":"31","hashOfConfig":"23"},{"size":2194,"mtime":1620868371833,"results":"32","hashOfConfig":"23"},{"size":5913,"mtime":1620868371837,"results":"33","hashOfConfig":"23"},{"size":2081,"mtime":1620892932504,"results":"34","hashOfConfig":"23"},{"size":386,"mtime":1620277223277,"results":"35","hashOfConfig":"23"},{"size":1226,"mtime":1620780639104,"results":"36","hashOfConfig":"23"},{"size":665,"mtime":1620277223277,"results":"37","hashOfConfig":"23"},{"size":335,"mtime":1620280210186,"results":"38","hashOfConfig":"23"},{"size":123,"mtime":1620269032634,"results":"39","hashOfConfig":"23"},{"size":0,"mtime":1620277593811,"results":"40","hashOfConfig":"23"},{"size":1771,"mtime":1620892038697,"results":"41","hashOfConfig":"23"},{"size":2751,"mtime":1620887093996,"results":"42","hashOfConfig":"23"},{"size":2350,"mtime":1620891897478,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"y182wp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"/home/daein/HTML/youtube/client/src/index.js",[],["94","95"],"/home/daein/HTML/youtube/client/src/reportWebVitals.js",[],"/home/daein/HTML/youtube/client/src/components/App.js",["96"],"import React, { Suspense } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Auth from '../hoc/auth'\n\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport LandingPage from './views/LandingPage/LandingPage'\nimport LoginPage from './views/LoginPage/LoginPage'\nimport RegisterPage from './views/RegisterPage/RegisterPage'\nimport VideoUploadPage from './views/VideoUploadPage/VideoUploadPage'\nimport VideoDetailPage from './views/VideoDetailPage/VideoDetailPage'\nimport SubscriptionPage from './views/SubscriptioPage/SubscriptionPage'\n\n\nfunction App() {\n\treturn (\n\t  <Suspense fallback={(<div>Loading...</div>)}>\n\t\t<NavBar />\n\t\t<div style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\n\t\t  <Switch>\n\t\t\t<Route exact path=\"/\" component={Auth(LandingPage, null)} />\n\t\t\t<Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n\t\t\t<Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n\t\t\t<Route exact path=\"/video/upload\" component={Auth(VideoUploadPage, true)} />\n\t\t\t<Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\n\t\t\t<Route exact path=\"/subscription\" component={Auth(SubscriptionPage, null)} />\n\t\t  </Switch>\n\t\t</div>\n\t\t<Footer />\n\t  </Suspense>\n\t);\n  }\n  \n  export default App;","/home/daein/HTML/youtube/client/src/_reducers/index.js",[],"/home/daein/HTML/youtube/client/src/hoc/auth.js",["97","98"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authUser } from '../_actions/user_action'\n\nexport default function (ComposedClass, option, adminRoute = null) {\n\t// option\n\t// null -> 아무나\n\t// true -> 로그인 유저만\n\t// false -> 로그인을 하지 않은 유저\n\n\tfunction AuthenticationCheck(props) {\n\t\tconst dispatch = useDispatch();\n\n\t\tuseEffect(() => {\n\t\t\tdispatch(authUser())\n\t\t\t.then(res => {\n\t\t\t\t// 로그인하지 않은 상태\n\t\t\t\tif (!res.payload.isAuth) {\n\t\t\t\t\tif (option) {\n\t\t\t\t\t\tprops.history.push('/login')\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 로그인한 상태\n\t\t\t\t\tif (adminRoute && !res.payload.isAdmin) {\n\t\t\t\t\t\tprops.history.push('/')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (option === false) {\n\t\t\t\t\t\t\tprops.history.push('/')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}, [])\n\n\t\treturn (\n\t\t\t<ComposedClass {...props} />\n\t\t)\n\t}\n\n\treturn AuthenticationCheck\n} ","/home/daein/HTML/youtube/client/src/components/views/NavBar/NavBar.js",[],"/home/daein/HTML/youtube/client/src/components/views/Footer/Footer.js",[],"/home/daein/HTML/youtube/client/src/components/views/LoginPage/LoginPage.js",[],"/home/daein/HTML/youtube/client/src/components/views/RegisterPage/RegisterPage.js",[],"/home/daein/HTML/youtube/client/src/components/views/LandingPage/LandingPage.js",[],"/home/daein/HTML/youtube/client/src/components/views/VideoUploadPage/VideoUploadPage.js",[],"/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/VideoDetailPage.js",["99"],"import React, { useEffect, useState } from 'react'\nimport { List, Avatar, Row, Col } from 'antd';\nimport axios from 'axios';\nimport SideVideo from './Sections/SideVideo';\nimport Subscribe from './Sections/Subscribe';\n\nfunction VideoDetailPage(props) {\n\n    const videoId_param = props.match.params.videoId;\n    const VideoVariable = { videoId: videoId_param };\n\n    const [Video, setVideo] = useState([]);\n\n    useEffect(() => {\n        axios.post('/api/video/getVideo', VideoVariable)\n            .then(res => {\n                if (res.data.success) {\n                    setVideo(res.data.video);\n                } else {\n                    alert('비디오 정보 로딩 실패');\n                }\n            });\n    }, []);\n\n    if (Video.writer) {\n        console.log(Video)\n        return (\n            <Row gutter>\n                <Col lg={18} xs={24}>\n                    <div className=\"postPage\" style={{ width: '100%', padding: '3rem 4em' }}>\n                        \n                        <video style={{ width: '100%' }} src={`http://localhost:5000/${Video.filePath}`} controls />\n                        <List.Item\n                            actions={[<Subscribe userTo={ Video.writer._id } userFrom={ localStorage.getItem('userId') } />]}\n                        >\n                            <List.Item.Meta\n                                avatar={<Avatar src={Video.writer.image} />}\n                                title={Video.writer.name}\n                                description={Video.description}\n                            />\n                            <div></div>\n                        </List.Item>\n\n                        {/* <Comments CommentLists={CommentLists} postId={Video._id} refreshFunction={updateComment} /> */}\n\n                    </div>\n                </Col>\n                <Col lg={6} xs={24}>\n                    <SideVideo />\n                </Col>\n            </Row>\n        )\n    } else {\n        return (\n            <div>\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default VideoDetailPage\n\n","/home/daein/HTML/youtube/client/src/_reducers/user_reducer.js",["100"],"import { LOGIN_USER, REGISTER_USER, AUTH_USER } from '../_actions/types'\n\nexport default function (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase LOGIN_USER:\n\t\t\treturn { ...state, loginSuccess: action.payload }\n\t\tcase REGISTER_USER:\n\t\t\treturn { ...state, register: action.payload }\n\t\tcase AUTH_USER:\n\t\t\treturn { ...state, userData: action.payload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","/home/daein/HTML/youtube/client/src/components/views/NavBar/Sections/RightMenu.js",["101","102"],"import React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nconst Upload = require('../../../../assets/upload.png');\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`/api/users/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"upload\">\n          <a href=\"/video/upload\"><img src={Upload} alt=\"Upload\" /></a>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);","/home/daein/HTML/youtube/client/src/_actions/user_action.js",[],"/home/daein/HTML/youtube/client/src/components/views/NavBar/Sections/LeftMenu.js",[],"/home/daein/HTML/youtube/client/src/_actions/types.js",[],"/home/daein/HTML/youtube/client/src/components/Config.js",[],"/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/Sections/SideVideo.js",[],"/home/daein/HTML/youtube/client/src/components/views/VideoDetailPage/Sections/Subscribe.js",["103"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Subscribe(props) {\n\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\n    const [Subscribed, setSubscribed] = useState(false);\n\n    useEffect(() => {\n        let variable = { userTo: props.userTo }\n\n        axios.post('/api/subscribe/subscribeNumber', variable)\n            .then(res => {\n                if(res.data.success) {\n                    setSubscribeNumber(res.data.subscribeNumber);\n                } else {\n                    alert('구독자 정보 가져오기 실패')\n                }\n            })\n\n        let variable2 = { userTo: props.userTo, userFrom: props.userFrom };\n        axios.post('/api/subscribe/subscribed', variable2)\n            .then(res => {\n                if (res.data.success) {\n                    setSubscribed(res.data.subscribed);\n                } else {\n                    alert('구독자 정보 불러오기 실패');\n                }\n            })\n    }, [SubscribeNumber, Subscribed])\n\n    const onSubscribe = () => {\n        if (Subscribed) {\n            let variable = {\n                userTo: props.userTo,\n                userFrom: props.userFrom\n            }\n\n            axios.post('/api/subscribe/unsubscribe', variable)\n                .then(res => {\n                    if (res.data.success) {\n                        console.log(res.data)\n                        setSubscribeNumber(Subscribed - 1);\n                        setSubscribed(!Subscribed);\n                    } else {\n                        alert('구독취소 실패');\n                    }\n                });\n        } else {\n            let variable = {\n                userTo: props.userTo,\n                userFrom: props.userFrom\n            }\n\n            axios.post('/api/subscribe/subscribe', variable)\n                .then(res => {\n                    if (res.data.success) {\n                        console.log(res.data)\n                        setSubscribeNumber(Subscribed + 1);\n                        setSubscribed(!Subscribed);\n                    } else {\n                        alert('구독하기 실패');\n                    }\n                });\n        }\n    }\n\n    return (\n        <div>\n            <button\n                style={{\n                    backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\n                    borderRadius: '2px', color: 'white',\n                    padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\n                }}\n                onClick={onSubscribe}\n            >\n                {SubscribeNumber} {Subscribed ? 'subscribed' : 'subscribe'}\n            </button>\n        </div>\n    )\n}\n\nexport default Subscribe\n","/home/daein/HTML/youtube/client/src/components/views/SubscriptioPage/SubscriptionPage.js",["104"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\nimport moment from 'moment';\n\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction SubscriptionPage() {\n    const [Videos, setVideos] = useState([])\n\n    const variable = {\n        userFrom: localStorage.getItem('userId')\n    }\n\n\tuseEffect(() => {\n\t\taxios.post('/api/video/getSubscriptionVideos', variable)\n\t\t\t.then(res => {\n\t\t\t\tif (res.data.success) {\n                    console.log(res.data)\n                    setVideos(res.data.videos)\n\t\t\t\t} else {\n\t\t\t\t\talert('비디오 목록 가져오기 실패')\n\t\t\t\t}\n\t\t\t})\n\t}, []);\n\n\tconst renderCards = Videos.map((video, index) => {\n        var minutes = Math.floor(video.duration / 60);\n        var seconds = Math.floor(video.duration - minutes * 60);\n\n        return <Col key={video._id} lg={6} md={8} xs={24}>\n            <div style={{ position: 'relative' }}>\n                <a href={`/video/${video._id}`} >\n                {/* <a href={'/video/detail'}> */}\n                <img style={{ width: '100%' }} alt=\"thumbnail\" src={`http://localhost:5000/${video.thumbnail}`} />\n                <div className=\"duration\"\n                    style={{ bottom: 0, right:0, position: 'absolute', margin: '4px', \n                    color: '#fff', backgroundColor: 'rgba(17, 17, 17, 0.8)', opacity: 0.8, \n                    padding: '2px 4px', borderRadius:'2px', letterSpacing:'0.5px', fontSize:'12px',\n                    fontWeight:'500', lineHeight:'12px' }}>\n                    <span>{minutes} : {seconds}</span>\n                </div>\n                </a>\n            </div><br />\n            <Meta\n                avatar={\n                    <Avatar src={video.writer.image} />\n                }\n                title={video.title}\n            />\n            <span>{video.writer.name} </span><br />\n            <span style={{ marginLeft: '3rem' }}> {video.views}</span>\n            - <span> {moment(video.createdAt).format(\"MMM Do YY\")} </span>\n        </Col>\n\n    });\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <Title level={2} > Recommended </Title>\n            <hr />\n\n            <Row gutter={16}>\n                {renderCards}\n            </Row>\n        </div>\n    )\n}\n\nexport default SubscriptionPage\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":5,"column":1,"nodeType":"115","endLine":41,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":33,"column":6,"nodeType":"118","endLine":33,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":23,"column":8,"nodeType":"118","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":1,"nodeType":"115","endLine":14,"endColumn":2},{"ruleId":"109","severity":1,"message":"122","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":40,"column":11,"nodeType":"125","endLine":40,"endColumn":38},{"ruleId":"116","severity":1,"message":"126","line":30,"column":8,"nodeType":"118","endLine":30,"endColumn":37,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":26,"column":5,"nodeType":"118","endLine":26,"endColumn":7,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'VideoVariable'. Either include it or remove the dependency array.",["133"],"'USER_SERVER' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.userFrom' and 'props.userTo'. Either include them or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'variable'. Either include it or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"144","text":"145"},"Update the dependencies array to be: [VideoVariable]",{"range":"146","text":"147"},"Update the dependencies array to be: [SubscribeNumber, Subscribed, props.userFrom, props.userTo]",{"range":"148","text":"149"},"Update the dependencies array to be: [variable]",{"range":"150","text":"151"},[741,743],"[dispatch, props.history]",[708,710],"[VideoVariable]",[966,995],"[SubscribeNumber, Subscribed, props.userFrom, props.userTo]",[647,649],"[variable]"]